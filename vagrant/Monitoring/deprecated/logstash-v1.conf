

input {
lumberjack{
port =>5000
type=> "log"
ssl_certificate => "/opt/certs/logstash-forwarder.crt"
ssl_key=> "/opt/private/logstash-forwarder.key"
}
  udp {
    port => 25826         # 25826 matches port specified in collectd.conf
    buffer_size => 1452   # 1452 is the default buffer size for Collectd
    codec => collectd { } # specific Collectd codec to invoke
    type => collectd
  }
}

filter{
if [type]=="nodemanager-metrics"{ #same as set in logstash-forwarder configuration json
  grok{
    break_on_match => false
    #metricssystem.MetricsSystem
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, NumActiveSources=%{NUMBER:NumActiveSources}, NumAllSources=%{NUMBER:NumAllSources}, NumActiveSinks=%{NUMBER:NumActiveSinks}, NumAllSinks=%{NUMBER:NumAllSinks}, Sink_diceNumOps=%{NUMBER:Sink_diceNumOps}, Sink_diceAvgTime=%{NUMBER:Sink_diceAvgTime:float}, Sink_diceDropped=%{NUMBER:Sink_diceDropped}, Sink_diceQsize=%{NUMBER:Sink_diceQsize}, SnapshotNumOps=%{NUMBER:SnapshotNumOps}, SnapshotAvgTime=%{NUMBER:SnapshotAvgTime:float}, PublishNumOps=%{NUMBER:PublishNumOps}, PublishAvgTime=%{NUMBER:PublishAvgTime:float}, DroppedPubAll=%{NUMBER: DroppedPubAll}"]

    #ugi.UgiMetrics
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, LoginSuccessNumOps=%{NUMBER:LoginSuccessNumOps}, LoginSuccessAvgTime=%{NUMBER:LoginSuccessAvgTime}, LoginFailureNumOps=%{NUMBER:LoginFailureNumOps}, LoginFailureAvgTime=%{NUMBER:LoginFailureAvgTime}, GetGroupsNumOps=%{NUMBER:GetGroupsNumOps}, GetGroupsAvgTime=%{NUMBER:GetGroupsAvgTime}
    "]

    #jvm.JvmMetrics
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, ProcessName=%{WORD:ProcessName}, SessionId=%{WORD:SessionId}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, MemNonHeapUsedM=%{NUMBER:MemNonHeapUsedM}, MemNonHeapCommittedM=%{NUMBER:MemNonHeapCommittedM}, MemNonHeapMaxM=%{NUMBER:MemNonHeapMaxM}, MemHeapUsedM=%{NUMBER:MemHeapUsedM}, MemHeapCommittedM=%{NUMBER:MemHeapCommittedM}, MemHeapMaxM=%{NUMBER:MemHeapMaxM}, MemMaxM=%{NUMBER:MemMaxM}, GcCountParNew=%{NUMBER:GcCountParNew}, GcTimeMillisParNew=%{NUMBER:GcTimeMillisParNew}, GcCountConcurrentMarkSweep=%{NUMBER:GcCountConcurrentMarkSweep}, GcTimeMillisConcurrentMarkSweep=%{NUMBER:GcTimeMillisConcurrentMarkSweep}, GcCount=%{NUMBER:GcCount}, GcTimeMillis=%{NUMBER:GcTimeMillis}, ThreadsNew=%{NUMBER:ThreadsNew}, ThreadsRunnable=%{NUMBER:ThreadsRunnable}, ThreadsBlocked=%{NUMBER:ThreadsBlocked}, ThreadsWaiting=%{NUMBER:ThreadsWaiting}, ThreadsTimedWaiting=%{NUMBER:ThreadsTimedWaiting}, ThreadsTerminated=%{NUMBER:ThreadsTerminated}, LogFatal=%{NUMBER:LogFatal}, LogError=%{NUMBER:LogError}, LogWarn=%{NUMBER:LogWarn}, LogInfo=%{NUMBER:LogInfo}"]

    #yarn.NodeManagerMetrics
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, ContainersLaunched=%{NUMBER:ContainersLaunched}, ContainersCompleted=%{NUMBER:ContainersCompleted}, ContainersFailed=%{NUMBER:ContainersFailed}, ContainersKilled=%{NUMBER:ContainersKilled}, ContainersIniting=%{NUMBER:ContainersIniting}, ContainersRunning=%{NUMBER:ContainersRunning}, AllocatedGB=%{NUMBER:AllocatedGB}, AllocatedContainers=%{NUMBER:AllocatedContainers}, AvailableGB=%{NUMBER:AvailableGB}, AllocatedVCores=%{NUMBER:AllocatedVCores}, AvailableVCores=%{NUMBER:AvailableVCores}, ContainerLaunchDurationNumOps=%{NUMBER:ContainerLaunchDurationNumOps}, ContainerLaunchDurationAvgTime=%{NUMBER:ContainerLaunchDurationAvgTime}"]

    #mapred.ShuffleMetrics
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, ShuffleOutputBytes=%{NUMBER:ShuffleOutputBytes}, ShuffleOutputsFailed=%{NUMBER:ShuffleOutputsFailed}, ShuffleOutputsOK=%{NUMBER:ShuffleOutputsOK}, ShuffleConnections=%{NUMBER:ShuffleConnections}"]

    #rpc.rpc
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port}, Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, ReceivedBytes=%{NUMBER:ReceivedBytes}, SentBytes=%{NUMBER:SentBytes}, RpcQueueTimeNumOps=%{NUMBER:RpcQueueTimeNumOps}, RpcQueueTimeAvgTime=%{NUMBER:RpcQueueTimeAvgTime}, RpcProcessingTimeNumOps=%{NUMBER:RpcProcessingTimeNumOps}, RpcProcessingTimeAvgTime=%{NUMBER:RpcProcessingTimeAvgTime}, RpcAuthenticationFailures=%{NUMBER:RpcAuthenticationFailures}, RpcAuthenticationSuccesses=%{NUMBER:RpcAuthenticationSuccesses}, RpcAuthorizationFailures=%{NUMBER:RpcAuthorizationFailures}, RpcAuthorizationSuccesses=%{NUMBER:RpcAuthorizationSuccesses}, NumOpenConnections=%{NUMBER:NumOpenConnections}, CallQueueLength=%{NUMBER:CallQueueLength}"]

    #rpcdetailed.rpcdetailed
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port}, Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}"]
  }
 }


if [type]=="datanode-metrics"{
  grok{
     break_on_match => false
     #metricssystem.MetricsSystem
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, NumActiveSources=%{NUMBER:NumActiveSources}, NumAllSources=%{NUMBER:NumAllSources}, NumActiveSinks=%{NUMBER:NumActiveSinks}, NumAllSinks=%{NUMBER:NumAllSinks}, Sink_diceNumOps=%{NUMBER:Sink_diceNumOps}, Sink_diceAvgTime=%{NUMBER:Sink_diceAvgTime:float}, Sink_diceDropped=%{NUMBER:Sink_diceDropped}, Sink_diceQsize=%{NUMBER:Sink_diceQsize}, SnapshotNumOps=%{NUMBER:SnapshotNumOps}, SnapshotAvgTime=%{NUMBER:SnapshotAvgTime:float}, PublishNumOps=%{NUMBER:PublishNumOps}, PublishAvgTime=%{NUMBER:PublishAvgTime:float}, DroppedPubAll=%{NUMBER: DroppedPubAll}"]

    #ugi.UgiMetrics
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, LoginSuccessNumOps=%{NUMBER:LoginSuccessNumOps}, LoginSuccessAvgTime=%{NUMBER:LoginSuccessAvgTime}, LoginFailureNumOps=%{NUMBER:LoginFailureNumOps}, LoginFailureAvgTime=%{NUMBER:LoginFailureAvgTime}, GetGroupsNumOps=%{NUMBER:GetGroupsNumOps}, GetGroupsAvgTime=%{NUMBER:GetGroupsAvgTime}
    "]

    #jvm.JvmMetrics
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, ProcessName=%{WORD:ProcessName}, SessionId=%{WORD:SessionId}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, MemNonHeapUsedM=%{NUMBER:MemNonHeapUsedM}, MemNonHeapCommittedM=%{NUMBER:MemNonHeapCommittedM}, MemNonHeapMaxM=%{NUMBER:MemNonHeapMaxM}, MemHeapUsedM=%{NUMBER:MemHeapUsedM}, MemHeapCommittedM=%{NUMBER:MemHeapCommittedM}, MemHeapMaxM=%{NUMBER:MemHeapMaxM}, MemMaxM=%{NUMBER:MemMaxM}, GcCountParNew=%{NUMBER:GcCountParNew}, GcTimeMillisParNew=%{NUMBER:GcTimeMillisParNew}, GcCountConcurrentMarkSweep=%{NUMBER:GcCountConcurrentMarkSweep}, GcTimeMillisConcurrentMarkSweep=%{NUMBER:GcTimeMillisConcurrentMarkSweep}, GcCount=%{NUMBER:GcCount}, GcTimeMillis=%{NUMBER:GcTimeMillis}, GcNumWarnThresholdExceeded=%{NUMBER:GcNumWarnThresholdExceeded}, GcNumInfoThresholdExceeded=%{NUMBER:GcNumInfoThresholdExceeded}, GcTotalExtraSleepTime=%{NUMBER:GcTotalExtraSleepTime}, ThreadsNew=%{NUMBER:ThreadsNew}, ThreadsRunnable=%{NUMBER:ThreadsRunnable}, ThreadsBlocked=%{NUMBER:ThreadsBlocked}, ThreadsWaiting=%{NUMBER:ThreadsWaiting}, ThreadsTimedWaiting=%{NUMBER:ThreadsTimedWaiting}, ThreadsTerminated=%{NUMBER:ThreadsTerminated}, LogFatal=%{NUMBER:LogFatal}, LogError=%{NUMBER:LogError}, LogWarn=%{NUMBER:LogWarn}, LogInfo=%{NUMBER:LogInfo}"]

    #dfs.datanode
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: SessionId=%{WORD:SessionId}, Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, BytesWritten=%{NUMBER:BytesWritten}, BytesRead=%{NUMBER:BytesRead}, BlocksWritten=%{NUMBER:BlocksWritten}, BlocksRead=%{NUMBER:BlocksRead}, BlocksReplicated=%{NUMBER:BlocksReplicated}, BlocksRemoved=%{NUMBER:BlocksRemoved}, BlocksVerified=%{NUMBER:BlocksVerified}, BlockVerificationFailures=%{NUMBER:BlockVerificationFailures}, BlocksCached=%{NUMBER:BlocksCached}, BlocksUncached=%{NUMBER:BlocksUncached}, ReadsFromLocalClient=%{NUMBER:ReadsFromLocalClient}, ReadsFromRemoteClient=%{NUMBER:ReadsFromRemoteClient}, WritesFromLocalClient=%{NUMBER:WritesFromLocalClient}, WritesFromRemoteClient=%{NUMBER:WritesFromRemoteClient}, BlocksGetLocalPathInfo=%{NUMBER:BlocksGetLocalPathInfo}, RamDiskBlocksWrite=%{NUMBER:RamDiskBlocksWrite}, RamDiskBlocksWriteFallback=%{NUMBER:RamDiskBlocksWriteFallback}, RamDiskBytesWrite=%{NUMBER:RamDiskBytesWrite}, RamDiskBlocksReadHits=%{NUMBER:RamDiskBlocksReadHits}, RamDiskBlocksEvicted=%{NUMBER:RamDiskBlocksEvicted}, RamDiskBlocksEvictedWithoutRead=%{NUMBER:RamDiskBlocksEvictedWithoutRead}, RamDiskBlocksEvictionWindowMsNumOps=%{NUMBER:RamDiskBlocksEvictionWindowMsNumOps}, RamDiskBlocksEvictionWindowMsAvgTime=%{NUMBER:RamDiskBlocksEvictionWindowMsAvgTime}, RamDiskBlocksLazyPersisted=%{NUMBER:RamDiskBlocksLazyPersisted}, RamDiskBlocksDeletedBeforeLazyPersisted=%{NUMBER:RamDiskBlocksDeletedBeforeLazyPersisted}, RamDiskBytesLazyPersisted=%{NUMBER:RamDiskBytesLazyPersisted}, RamDiskBlocksLazyPersistWindowMsNumOps=%{NUMBER:RamDiskBlocksLazyPersistWindowMsNumOps}, RamDiskBlocksLazyPersistWindowMsAvgTime=%{NUMBER:RamDiskBlocksLazyPersistWindowMsAvgTime}, FsyncCount=%{NUMBER:FsyncCount}, VolumeFailures=%{NUMBER:VolumeFailures}, DatanodeNetworkErrors=%{NUMBER:DatanodeNetworkErrors}, ReadBlockOpNumOps=%{NUMBER:ReadBlockOpNumOps}, ReadBlockOpAvgTime=%{NUMBER:ReadBlockOpAvgTime}, WriteBlockOpNumOps=%{NUMBER:WriteBlockOpNumOps}, WriteBlockOpAvgTime=%{NUMBER:WriteBlockOpAvgTime}, BlockChecksumOpNumOps=%{NUMBER:BlockChecksumOpNumOps}, BlockChecksumOpAvgTime=%{NUMBER:BlockChecksumOpAvgTime}, CopyBlockOpNumOps=%{NUMBER:CopyBlockOpNumOps}, CopyBlockOpAvgTime=%{NUMBER:CopyBlockOpAvgTime}, ReplaceBlockOpNumOps=%{NUMBER:ReplaceBlockOpNumOps}, ReplaceBlockOpAvgTime=%{NUMBER:ReplaceBlockOpAvgTime}, HeartbeatsNumOps=%{NUMBER:HeartbeatsNumOps}, HeartbeatsAvgTime=%{NUMBER:HeartbeatsAvgTime}, BlockReportsNumOps=%{NUMBER:BlockReportsNumOps}, BlockReportsAvgTime=%{NUMBER:BlockReportsAvgTime}, CacheReportsNumOps=%{NUMBER:CacheReportsNumOps}, CacheReportsAvgTime=%{NUMBER:CacheReportsAvgTime}, PacketAckRoundTripTimeNanosNumOps=%{NUMBER:PacketAckRoundTripTimeNanosNumOps}, PacketAckRoundTripTimeNanosAvgTime=%{NUMBER:PacketAckRoundTripTimeNanosAvgTime}, FlushNanosNumOps=%{NUMBER:FlushNanosNumOps}, FlushNanosAvgTime=%{NUMBER:FlushNanosAvgTime}, FsyncNanosNumOps=%{NUMBER:FsyncNanosNumOps}, FsyncNanosAvgTime=%{NUMBER:FsyncNanosAvgTime}, SendDataPacketBlockedOnNetworkNanosNumOps=%{NUMBER:SendDataPacketBlockedOnNetworkNanosNumOps}, SendDataPacketBlockedOnNetworkNanosAvgTime=%{NUMBER:SendDataPacketBlockedOnNetworkNanosAvgTime}, SendDataPacketTransferNanosNumOps=%{NUMBER:SendDataPacketTransferNanosNumOps}, SendDataPacketTransferNanosAvgTime=%{NUMBER:SendDataPacketTransferNanosAvgTime}"]

    #rpc.rpc
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port}, Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, ReceivedBytes=%{NUMBER:ReceivedBytes}, SentBytes=%{NUMBER:SentBytes}, RpcQueueTimeNumOps=%{NUMBER:RpcQueueTimeNumOps}, RpcQueueTimeAvgTime=%{NUMBER:RpcQueueTimeAvgTime}, RpcProcessingTimeNumOps=%{NUMBER:RpcProcessingTimeNumOps}, RpcProcessingTimeAvgTime=%{NUMBER:RpcProcessingTimeAvgTime}, RpcAuthenticationFailures=%{NUMBER:RpcAuthenticationFailures}, RpcAuthenticationSuccesses=%{NUMBER:RpcAuthenticationSuccesses}, RpcAuthorizationFailures=%{NUMBER:RpcAuthorizationFailures}, RpcAuthorizationSuccesses=%{NUMBER:RpcAuthorizationSuccesses}, NumOpenConnections=%{NUMBER:NumOpenConnections}, CallQueueLength=%{NUMBER:CallQueueLength}"]

    #rpcdetailed.rpcdetailed
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port}, Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}"]
  }
}

if [type]=="resourcemanager-metrics"{
  grok{
    break_on_match => false
    #yarn.QueueMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Queue=%{USER:Queue}, Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, running_0=%{NUMBER:running_0}, running_60=%{NUMBER:running_60}, running_300=%{NUMBER:running_300}, running_1440=%{NUMBER:running_1440}, FairShareMB=%{NUMBER:FairShareMB}, FairShareVCores=%{NUMBER:FairShareVCores}, SteadyFairShareMB=%{NUMBER:SteadyFairShareMB}, SteadyFairShareVCores=%{NUMBER:SteadyFairShareVCores}, MinShareMB=%{NUMBER:MinShareMB}, MinShareVCores=%{NUMBER:MinShareVCores}, MaxShareMB=%{NUMBER:MaxShareMB}, MaxShareVCores=%{NUMBER:MaxShareVCores}, AppsSubmitted=%{NUMBER:AppsSubmitted}, AppsRunning=%{NUMBER:AppsRunning}, AppsPending=%{NUMBER:AppsPending}, AppsCompleted=%{NUMBER:AppsCompleted}, AppsKilled=%{NUMBER:AppsKilled}, AppsFailed=%{NUMBER:AppsFailed}, AllocatedMB=%{NUMBER:AllocatedMB}, AllocatedVCores=%{NUMBER:AllocatedVCores}, AllocatedContainers=%{NUMBER:AllocatedContainers}, AggregateContainersAllocated=%{NUMBER:AggregateContainersAllocated}, AggregateContainersReleased=%{NUMBER:AggregateContainersReleased}, AvailableMB=%{NUMBER:AvailableMB}, AvailableVCores=%{NUMBER:AvailableVCores}, PendingMB=%{NUMBER:PendingMB}, PendingVCores=%{NUMBER:PendingVCores}, PendingContainers=%{NUMBER:PendingContainers}, ReservedMB=%{NUMBER:ReservedMB}, ReservedVCores=%{NUMBER:ReservedVCores}, ReservedContainers=%{NUMBER:ReservedContainers}, ActiveUsers=%{NUMBER:ActiveUsers}, ActiveApplications=%{NUMBER:ActiveApplications}, AppAttemptFirstContainerAllocationDelayNumOps=%{NUMBER:AppAttemptFirstContainerAllocationDelayNumOps}, AppAttemptFirstContainerAllocationDelayAvgTime=%{NUMBER:AppAttemptFirstContainerAllocationDelayAvgTime}"]

    ##yarn.QueueMetrics(bis)
    match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Queue=%{WORD:Queue}, User=%{WORD:user}, Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, running_0=%{NUMBER:running_0}, running_60=%{NUMBER:running_60}, running_300=%{NUMBER:running_300}, running_1440=%{NUMBER:running_1440}, AppsSubmitted=%{NUMBER:AppsSubmitted}, AppsRunning=%{NUMBER:AppsRunning}, AppsPending=%{NUMBER:AppsPending}, AppsCompleted=%{NUMBER:AppsCompleted}, AppsKilled=%{NUMBER:AppsKilled}, AppsFailed=%{NUMBER:AppsFailed}, AllocatedMB=%{NUMBER:AllocatedMB}, AllocatedVCores=%{NUMBER:AllocatedVCores}, AllocatedContainers=%{NUMBER:AllocatedContainers}, AggregateContainersAllocated=%{NUMBER:AggregateContainersAllocated}, AggregateContainersReleased=%{NUMBER:AggregateContainersReleased}, AvailableMB=%{NUMBER:AvailableMB}, AvailableVCores=%{NUMBER:AvailableVCores}, PendingMB=%{NUMBER:PendingMB}, PendingVCores=%{NUMBER:PendingVCores}, PendingContainers=%{NUMBER:PendingContainers}, ReservedMB=%{NUMBER:ReservedMB}, ReservedVCores=%{NUMBER:ReservedVCores}, ReservedContainers=%{NUMBER:ReservedContainers}, ActiveUsers=%{NUMBER:ActiveUsers}, ActiveApplications=%{NUMBER:ActiveApplications}, AppAttemptFirstContainerAllocationDelayNumOps=%{NUMBER:AppAttemptFirstContainerAllocationDelayNumOps}, AppAttemptFirstContainerAllocationDelayAvgTime=%{NUMBER:AppAttemptFirstContainerAllocationDelayAvgTime}"]

     #rpc.rpc
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port}, Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, ReceivedBytes=%{NUMBER:ReceivedBytes}, SentBytes=%{NUMBER:SentBytes}, RpcQueueTimeNumOps=%{NUMBER:RpcQueueTimeNumOps}, RpcQueueTimeAvgTime=%{NUMBER:RpcQueueTimeAvgTime}, RpcProcessingTimeNumOps=%{NUMBER:RpcProcessingTimeNumOps}, RpcProcessingTimeAvgTime=%{NUMBER:RpcProcessingTimeAvgTime}, RpcAuthenticationFailures=%{NUMBER:RpcAuthenticationFailures}, RpcAuthenticationSuccesses=%{NUMBER:RpcAuthenticationSuccesses}, RpcAuthorizationFailures=%{NUMBER:RpcAuthorizationFailures}, RpcAuthorizationSuccesses=%{NUMBER:RpcAuthorizationSuccesses}, NumOpenConnections=%{NUMBER:NumOpenConnections}, CallQueueLength=%{NUMBER:CallQueueLength}"]

     #rpcdetailed
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port}, Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, RegisterNodeManagerNumOps=%{NUMBER:RegisterNodeManagerNumOps}, RegisterNodeManagerAvgTime=%{NUMBER:RegisterNodeManagerAvgTime}, NodeHeartbeatNumOps=%{NUMBER:NodeHeartbeatNumOps}, NodeHeartbeatAvgTime=%{NUMBER:NodeHeartbeatAvgTime}"]

     #rpcdetailed (bis)
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port}, Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, GetFileInfoNumOps=%{NUMBER:GetFileInfoNumOps}, GetFileInfoAvgTime=%{NUMBER:GetFileInfoAvgTime}, GetListingNumOps=%{NUMBER:GetListingNumOps}, GetListingAvgTime=%{NUMBER:GetListingAvgTime}, ListCacheDirectivesNumOps=%{NUMBER:ListCacheDirectivesNumOps}, ListCacheDirectivesAvgTime=%{NUMBER:ListCacheDirectivesAvgTime}, ListCachePoolsNumOps=%{NUMBER:ListCachePoolsNumOps}, ListCachePoolsAvgTime=%{NUMBER:ListCachePoolsAvgTime}, SafeModeExceptionNumOps=%{NUMBER:SafeModeExceptionNumOps}, SafeModeExceptionAvgTime=%{NUMBER:SafeModeExceptionAvgTime}, CreateNumOps=%{NUMBER:CreateNumOps}, CreateAvgTime=%{NUMBER:CreateAvgTime}, AddBlockNumOps=%{NUMBER:AddBlockNumOps}, AddBlockAvgTime=%{NUMBER:AddBlockAvgTime}, GetServerDefaultsNumOps=%{NUMBER:GetServerDefaultsNumOps}, GetServerDefaultsAvgTime=%{NUMBER:GetServerDefaultsAvgTime}, CompleteNumOps=%{NUMBER:CompleteNumOps}, CompleteAvgTime=%{NUMBER:CompleteAvgTime}, GetBlockLocationsNumOps=%{NUMBER:GetBlockLocationsNumOps}, GetBlockLocationsAvgTime=%{NUMBER:GetBlockLocationsAvgTime}, DeleteNumOps=%{NUMBER:DeleteNumOps}, DeleteAvgTime=%{NUMBER:DeleteAvgTime}"]

     #rpcdetailed (bis2)
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port}, Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, GetNewApplicationNumOps=%{NUMBER:GetNewApplicationNumOps}, GetNewApplicationAvgTime=%{NUMBER:GetNewApplicationAvgTime}, SubmitApplicationNumOps=%{NUMBER:SubmitApplicationNumOps}, SubmitApplicationAvgTime=%{NUMBER:SubmitApplicationAvgTime}, GetApplicationReportNumOps=%{NUMBER:GetApplicationReportNumOps}, GetApplicationReportAvgTime=%{NUMBER:GetApplicationReportAvgTime}, ApplicationNotFoundExceptionNumOps=%{NUMBER:ApplicationNotFoundExceptionNumOps}, ApplicationNotFoundExceptionAvgTime=%{NUMBER:ApplicationNotFoundExceptionAvgTime}"]

     #metricssystem.MetricsSystem
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, NumActiveSources=%{NUMBER:NumActiveSources}, NumAllSources=%{NUMBER:NumAllSources}, NumActiveSinks=%{NUMBER:NumActiveSinks}, NumAllSinks=%{NUMBER:NumAllSinks}, Sink_diceNumOps=%{NUMBER:Sink_diceNumOps}, Sink_diceAvgTime=%{NUMBER:Sink_diceAvgTime:float}, Sink_diceDropped=%{NUMBER:Sink_diceDropped}, Sink_diceQsize=%{NUMBER:Sink_diceQsize}, SnapshotNumOps=%{NUMBER:SnapshotNumOps}, SnapshotAvgTime=%{NUMBER:SnapshotAvgTime:float}, PublishNumOps=%{NUMBER:PublishNumOps}, PublishAvgTime=%{NUMBER:PublishAvgTime:float}, DroppedPubAll=%{NUMBER: DroppedPubAll}"]

     #ugi.UgiMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, LoginSuccessNumOps=%{NUMBER:LoginSuccessNumOps}, LoginSuccessAvgTime=%{NUMBER:LoginSuccessAvgTime}, LoginFailureNumOps=%{NUMBER:LoginFailureNumOps}, LoginFailureAvgTime=%{NUMBER:LoginFailureAvgTime}, GetGroupsNumOps=%{NUMBER:GetGroupsNumOps}, GetGroupsAvgTime=%{NUMBER:GetGroupsAvgTime}"]

     #jvm.JvmMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, ProcessName=%{WORD:ProcessName}, SessionId=%{WORD:SessionId}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, MemNonHeapUsedM=%{NUMBER:MemNonHeapUsedM}, MemNonHeapCommittedM=%{NUMBER:MemNonHeapCommittedM}, MemNonHeapMaxM=%{NUMBER:MemNonHeapMaxM}, MemHeapUsedM=%{NUMBER:MemHeapUsedM}, MemHeapCommittedM=%{NUMBER:MemHeapCommittedM}, MemHeapMaxM=%{NUMBER:MemHeapMaxM}, MemMaxM=%{NUMBER:MemMaxM}, GcCountParNew=%{NUMBER:GcCountParNew}, GcTimeMillisParNew=%{NUMBER:GcTimeMillisParNew}, GcCountConcurrentMarkSweep=%{NUMBER:GcCountConcurrentMarkSweep}, GcTimeMillisConcurrentMarkSweep=%{NUMBER:GcTimeMillisConcurrentMarkSweep}, GcCount=%{NUMBER:GcCount}, GcTimeMillis=%{NUMBER:GcTimeMillis}, ThreadsNew=%{NUMBER:ThreadsNew}, ThreadsRunnable=%{NUMBER:ThreadsRunnable}, ThreadsBlocked=%{NUMBER:ThreadsBlocked}, ThreadsWaiting=%{NUMBER:ThreadsWaiting}, ThreadsTimedWaiting=%{NUMBER:ThreadsTimedWaiting}, ThreadsTerminated=%{NUMBER:ThreadsTerminated}, LogFatal=%{NUMBER:LogFatal}, LogError=%{NUMBER:LogError}, LogWarn=%{NUMBER:LogWarn}, LogInfo=%{NUMBER:LogInfo}"]

     #yarn.ClusterMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: ClusterMetrics=%{WORD:ClusterMetrics}, Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, NumActiveNMs=%{NUMBER:NumActiveNMs}, NumDecommissionedNMs=%{NUMBER:NumDecommissionedNMs}, NumLostNMs=%{NUMBER:NumLostNMs}, NumUnhealthyNMs=%{NUMBER:NumUnhealthyNMs}, NumRebootedNMs=%{NUMBER:NumRebootedNMs}, AMLaunchDelayNumOps=%{NUMBER:AMLaunchDelayNumOps}, AMLaunchDelayAvgTime=%{NUMBER:AMLaunchDelayAvgTime}, AMRegisterDelayNumOps=%{NUMBER:AMRegisterDelayNumOps}, AMRegisterDelayAvgTime=%{NUMBER:AMRegisterDelayAvgTime}"]

     #fairscheduler-op-durations.FSOpDurations
     match=>["message","\A%{NUMBER:job_id} %{NOTSPACE:serviceType}.%{WORD:serviceMetrics}: FSOpDurations=FSOpDurations, Context=%{NOTSPACE:context}, Hostname=%{HOST}, ContinuousSchedulingRunNumOps=%{NUMBER:ContinuousSchedulingRunNumOps}, ContinuousSchedulingRunAvgTime=%{NUMBER:ContinuousSchedulingRunAvgTime}, ContinuousSchedulingRunStdevTime=%{NUMBER:ContinuousSchedulingRunStdevTime}, ContinuousSchedulingRunIMinTime=%{NUMBER:ContinuousSchedulingRunIMinTime}, ContinuousSchedulingRunIMaxTime=%{NUMBER:ContinuousSchedulingRunIMaxTime}, ContinuousSchedulingRunMinTime=%{NUMBER:ContinuousSchedulingRunMinTime}, ContinuousSchedulingRunMaxTime=%{NUMBER:ContinuousSchedulingRunMaxTime}, NodeUpdateCallNumOps=%{NUMBER:NodeUpdateCallNumOps}, NodeUpdateCallAvgTime=%{NUMBER:NodeUpdateCallAvgTime}, NodeUpdateCallStdevTime=%{NUMBER:NodeUpdateCallStdevTime}, NodeUpdateCallIMinTime=%{NUMBER:NodeUpdateCallIMinTime}, NodeUpdateCallIMaxTime=%{NOTSPACE:NodeUpdateCallIMaxTime}, NodeUpdateCallMinTime=%{NUMBER:NodeUpdateCallMinTime}, NodeUpdateCallMaxTime=%{NUMBER:NodeUpdateCallMaxTime}, UpdateThreadRunNumOps=%{NUMBER:UpdateThreadRunNumOps}, UpdateThreadRunAvgTime=%{NUMBER:UpdateThreadRunAvgTime}, UpdateThreadRunStdevTime=%{NUMBER:UpdateThreadRunStdevTime}, UpdateThreadRunIMinTime=%{NUMBER:UpdateThreadRunIMinTime}, UpdateThreadRunIMaxTime=%{NUMBER:UpdateThreadRunIMaxTime}, UpdateThreadRunMinTime=%{NUMBER:UpdateThreadRunMinTime}, UpdateThreadRunMaxTime=%{NUMBER:UpdateThreadRunMaxTime}, UpdateCallNumOps=%{NUMBER:UpdateCallNumOps}, UpdateCallAvgTime=%{NUMBER:UpdateCallAvgTime}, UpdateCallStdevTime=%{NUMBER:UpdateCallStdevTime}, UpdateCallIMinTime=%{NUMBER:UpdateCallIMinTime}, UpdateCallIMaxTime=%{NUMBER:UpdateCallIMaxTime}, UpdateCallMinTime=%{NUMBER:UpdateCallMinTime}, UpdateCallMaxTime=%{NUMBER:UpdateCallMaxTime}, PreemptCallNumOps=%{NUMBER:PreemptCallNumOps}, PreemptCallAvgTime=%{NUMBER:PreemptCallAvgTime}, PreemptCallStdevTime=%{NUMBER:PreemptCallStdevTime}, PreemptCallIMinTime=%{NOTSPACE:PreemptCallIMinTime}, PreemptCallIMaxTime=%{NOTSPACE:PreemptCallIMaxTime}, PreemptCallMinTime=%{NOTSPACE:PreemptCallMinTime}, PreemptCallMaxTime=%{NOTSPACE:PreemptCallMaxTime}"]
  }
}

if [type]=="namenode-metrics"{
  grok{
    break_on_match => false
    #dfs.namenode
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: ProcessName=%{WORD:ProcessName}, SessionId=%{WORD:SessionId}, Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, CreateFileOps=%{NUMBER:CreateFileOps}, FilesCreated=%{NUMBER:FilesCreated}, FilesAppended=%{NUMBER:FilesAppended}, GetBlockLocations=%{NUMBER:GetBlockLocations}, FilesRenamed=%{NUMBER:FilesRenamed}, GetListingOps=%{NUMBER:GetListingOps}, DeleteFileOps=%{NUMBER:DeleteFileOps}, FilesDeleted=%{NUMBER:FilesDeleted}, FileInfoOps=%{NUMBER:FileInfoOps}, AddBlockOps=%{NUMBER:AddBlockOps}, GetAdditionalDatanodeOps=%{NUMBER:GetAdditionalDatanodeOps}, CreateSymlinkOps=%{NUMBER:CreateSymlinkOps}, GetLinkTargetOps=%{NUMBER:GetLinkTargetOps}, FilesInGetListingOps=%{NUMBER:FilesInGetListingOps}, AllowSnapshotOps=%{NUMBER:AllowSnapshotOps}, DisallowSnapshotOps=%{NUMBER:DisallowSnapshotOps}, CreateSnapshotOps=%{NUMBER:CreateSnapshotOps}, DeleteSnapshotOps=%{NUMBER:DeleteSnapshotOps}, RenameSnapshotOps=%{NUMBER:RenameSnapshotOps}, ListSnapshottableDirOps=%{NUMBER:ListSnapshottableDirOps}, SnapshotDiffReportOps=%{NUMBER:SnapshotDiffReportOps}, BlockReceivedAndDeletedOps=%{NUMBER:BlockReceivedAndDeletedOps}, StorageBlockReportOps=%{NUMBER:StorageBlockReportOps}, TransactionsNumOps=%{NUMBER:TransactionsNumOps}, TransactionsAvgTime=%{NUMBER:TransactionsAvgTime}, SyncsNumOps=%{NUMBER:SyncsNumOps}, SyncsAvgTime=%{NUMBER:SyncsAvgTime}, TransactionsBatchedInSync=%{NUMBER:TransactionsBatchedInSync}, BlockReportNumOps=%{NUMBER:BlockReportNumOps}, BlockReportAvgTime=%{NUMBER:BlockReportAvgTime}, CacheReportNumOps=%{NUMBER:CacheReportNumOps}, CacheReportAvgTime=%{NUMBER:CacheReportAvgTime}, SafeModeTime=%{NUMBER:SafeModeTime}, FsImageLoadTime=%{NUMBER:FsImageLoadTime}, GetEditNumOps=%{NUMBER:GetEditNumOps}, GetEditAvgTime=%{NUMBER:GetEditAvgTime}, GetImageNumOps=%{NUMBER:GetImageNumOps}, GetImageAvgTime=%{NUMBER:GetImageAvgTime}, PutImageNumOps=%{NUMBER:PutImageNumOps}, PutImageAvgTime=%{NUMBER:PutImageAvgTime}"]

     #default.StartupProgress
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, ElapsedTime=%{NUMBER:ElapsedTime}, PercentComplete=%{NUMBER:PercentComplete}, LoadingFsImageCount=%{NUMBER:LoadingFsImageCount}, LoadingFsImageElapsedTime=%{NUMBER:LoadingFsImageElapsedTime}, LoadingFsImageTotal=%{NUMBER:LoadingFsImageTotal}, LoadingFsImagePercentComplete=%{NUMBER:LoadingFsImagePercentComplete}, LoadingEditsCount=%{NUMBER:LoadingEditsCount}, LoadingEditsElapsedTime=%{NUMBER:LoadingEditsElapsedTime}, LoadingEditsTotal=%{NUMBER:LoadingEditsTotal}, LoadingEditsPercentComplete=%{NUMBER:LoadingEditsPercentComplete}, SavingCheckpointCount=%{NUMBER:SavingCheckpointCount}, SavingCheckpointElapsedTime=%{NUMBER:SavingCheckpointElapsedTime}, SavingCheckpointTotal=%{NUMBER:SavingCheckpointTotal}, SavingCheckpointPercentComplete=%{NUMBER:SavingCheckpointPercentComplete}, SafeModeCount=%{NUMBER:SafeModeCount}, SafeModeElapsedTime=%{NUMBER:SafeModeElapsedTime}, SafeModeTotal=%{NUMBER:SafeModeTotal}, SafeModePercentComplete=%{NUMBER:SafeModePercentComplete}"]

     #rpc.RetryCache.NameNodeRetryCache
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}.%{WORD:serviceMetrics2}: Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, CacheHit=%{NUMBER:CacheHit}, CacheCleared=%{NUMBER:CacheCleared}, CacheUpdated=%{NUMBER:CacheUpdated}"]

     #rpc.rpc
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port}, Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, ReceivedBytes=%{NUMBER:ReceivedBytes}, SentBytes=%{NUMBER:SentBytes}, RpcQueueTimeNumOps=%{NUMBER:RpcQueueTimeNumOps}, RpcQueueTimeAvgTime=%{NUMBER:RpcQueueTimeAvgTime}, RpcProcessingTimeNumOps=%{NUMBER:RpcProcessingTimeNumOps}, RpcProcessingTimeAvgTime=%{NUMBER:RpcProcessingTimeAvgTime}, RpcAuthenticationFailures=%{NUMBER:RpcAuthenticationFailures}, RpcAuthenticationSuccesses=%{NUMBER:RpcAuthenticationSuccesses}, RpcAuthorizationFailures=%{NUMBER:RpcAuthorizationFailures}, RpcAuthorizationSuccesses=%{NUMBER:RpcAuthorizationSuccesses}, NumOpenConnections=%{NUMBER:NumOpenConnections}, CallQueueLength=%{NUMBER:CallQueueLength}"]

     #rpcdetailed.rpcdetailed
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port}, Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, IOExceptionNumOps=%{NUMBER:IOExceptionNumOps}, IOExceptionAvgTime=%{NUMBER:IOExceptionAvgTime}, VersionRequestNumOps=%{NUMBER:VersionRequestNumOps}, VersionRequestAvgTime=%{NUMBER:VersionRequestAvgTime}, RegisterDatanodeNumOps=%{NUMBER:RegisterDatanodeNumOps}, RegisterDatanodeAvgTime=%{NUMBER:RegisterDatanodeAvgTime}, SendHeartbeatNumOps=%{NUMBER:SendHeartbeatNumOps}, SendHeartbeatAvgTime=%{NUMBER:SendHeartbeatAvgTime}, BlockReportNumOps=%{NUMBER:BlockReportNumOps}, BlockReportAvgTime=%{NUMBER:BlockReportAvgTime}, CacheReportNumOps=%{NUMBER:CacheReportNumOps}, CacheReportAvgTime=%{NUMBER:CacheReportAvgTime}, GetTransactionIdNumOps=%{NUMBER:GetTransactionIdNumOps}, GetTransactionIdAvgTime=%{NUMBER:GetTransactionIdAvgTime}, BlockReceivedAndDeletedNumOps=%{NUMBER:BlockReceivedAndDeletedNumOps}, BlockReceivedAndDeletedAvgTime=%{NUMBER:BlockReceivedAndDeletedAvgTime}, RollEditLogNumOps=%{NUMBER:RollEditLogNumOps}, RollEditLogAvgTime=%{NUMBER:RollEditLogAvgTime}, GetEditLogManifestNumOps=%{NUMBER:GetEditLogManifestNumOps}, GetEditLogManifestAvgTime=%{NUMBER:GetEditLogManifestAvgTime}"]

     #rpcdetailed.rpcdetailed (bis)
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port}, Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, GetFileInfoNumOps=%{NUMBER:GetFileInfoNumOps}, GetFileInfoAvgTime=%{NUMBER:GetFileInfoAvgTime}, GetListingNumOps=%{NUMBER:GetListingNumOps}, GetListingAvgTime=%{NUMBER:GetListingAvgTime}, SafeModeExceptionNumOps=%{NUMBER:SafeModeExceptionNumOps}, SafeModeExceptionAvgTime=%{NUMBER:SafeModeExceptionAvgTime}, DeleteNumOps=%{NUMBER:DeleteNumOps}, DeleteAvgTime=%{NUMBER:DeleteAvgTime}, ListCacheDirectivesNumOps=%{NUMBER:ListCacheDirectivesNumOps}, ListCacheDirectivesAvgTime=%{NUMBER:ListCacheDirectivesAvgTime}, ListCachePoolsNumOps=%{NUMBER:ListCachePoolsNumOps}, ListCachePoolsAvgTime=%{NUMBER:ListCachePoolsAvgTime}, CreateNumOps=%{NUMBER:CreateNumOps}, CreateAvgTime=%{NUMBER:CreateAvgTime}, AddBlockNumOps=%{NUMBER:AddBlockNumOps}, AddBlockAvgTime=%{NUMBER:AddBlockAvgTime}, GetServerDefaultsNumOps=%{NUMBER:GetServerDefaultsNumOps}, GetServerDefaultsAvgTime=%{NUMBER:GetServerDefaultsAvgTime}, CompleteNumOps=%{NUMBER:CompleteNumOps}, CompleteAvgTime=%{NUMBER:CompleteAvgTime}, GetBlockLocationsNumOps=%{NUMBER:GetBlockLocationsNumOps}, GetBlockLocationsAvgTime=%{NUMBER:GetBlockLocationsAvgTime}"]

     #rpcdetailed.rpcdetailed (bis2)
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port}, Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}"]

     #dfs.FSNamesystem
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, HAState=%{WORD:HAState}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, MissingBlocks=%{NUMBER:MissingBlocks}, MissingReplOneBlocks=%{NUMBER:MissingReplOneBlocks}, ExpiredHeartbeats=%{NUMBER:ExpiredHeartbeats}, TransactionsSinceLastCheckpoint=%{NUMBER:TransactionsSinceLastCheckpoint}, TransactionsSinceLastLogRoll=%{NUMBER:TransactionsSinceLastLogRoll}, LastWrittenTransactionId=%{NUMBER:LastWrittenTransactionId}, LastCheckpointTime=%{NUMBER:LastCheckpointTime}, CapacityTotal=%{NUMBER:CapacityTotal}, CapacityTotalGB=%{NUMBER:CapacityTotalGB}, CapacityUsed=%{NUMBER:CapacityUsed}, CapacityUsedGB=%{NUMBER:CapacityUsedGB}, CapacityRemaining=%{NUMBER:CapacityRemaining}, CapacityRemainingGB=%{NUMBER:CapacityRemainingGB}, CapacityUsedNonDFS=%{NUMBER:CapacityUsedNonDFS}, TotalLoad=%{NUMBER:TotalLoad}, SnapshottableDirectories=%{NUMBER:SnapshottableDirectories}, Snapshots=%{NUMBER:Snapshots}, BlocksTotal=%{NUMBER:BlocksTotal}, FilesTotal=%{NUMBER:FilesTotal}, PendingReplicationBlocks=%{NUMBER:PendingReplicationBlocks}, UnderReplicatedBlocks=%{NUMBER:UnderReplicatedBlocks}, CorruptBlocks=%{NUMBER:CorruptBlocks}, ScheduledReplicationBlocks=%{NUMBER:ScheduledReplicationBlocks}, PendingDeletionBlocks=%{NUMBER:PendingDeletionBlocks}, ExcessBlocks=%{NUMBER:ExcessBlocks}, PostponedMisreplicatedBlocks=%{NUMBER:PostponedMisreplicatedBlocks}, PendingDataNodeMessageCount=%{NUMBER:PendingDataNodeMessageCount}, MillisSinceLastLoadedEdits=%{NUMBER:MillisSinceLastLoadedEdits}, BlockCapacity=%{NUMBER:BlockCapacity}, StaleDataNodes=%{NUMBER:StaleDataNodes}, TotalFiles=%{NUMBER:TotalFiles}"]


     #metricssystem.MetricsSystem
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, NumActiveSources=%{NUMBER:NumActiveSources}, NumAllSources=%{NUMBER:NumAllSources}, NumActiveSinks=%{NUMBER:NumActiveSinks}, NumAllSinks=%{NUMBER:NumAllSinks}, Sink_diceNumOps=%{NUMBER:Sink_diceNumOps}, Sink_diceAvgTime=%{NUMBER:Sink_diceAvgTime:float}, Sink_diceDropped=%{NUMBER:Sink_diceDropped}, Sink_diceQsize=%{NUMBER:Sink_diceQsize}, SnapshotNumOps=%{NUMBER:SnapshotNumOps}, SnapshotAvgTime=%{NUMBER:SnapshotAvgTime:float}, PublishNumOps=%{NUMBER:PublishNumOps}, PublishAvgTime=%{NUMBER:PublishAvgTime:float}, DroppedPubAll=%{NUMBER: DroppedPubAll}"]

     #ugi.UgiMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, LoginSuccessNumOps=%{NUMBER:LoginSuccessNumOps}, LoginSuccessAvgTime=%{NUMBER:LoginSuccessAvgTime}, LoginFailureNumOps=%{NUMBER:LoginFailureNumOps}, LoginFailureAvgTime=%{NUMBER:LoginFailureAvgTime}, GetGroupsNumOps=%{NUMBER:GetGroupsNumOps}, GetGroupsAvgTime=%{NUMBER:GetGroupsAvgTime}"]

     #jvm.JvmMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, ProcessName=%{WORD:ProcessName}, SessionId=%{WORD:SessionId}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, MemNonHeapUsedM=%{NUMBER:MemNonHeapUsedM}, MemNonHeapCommittedM=%{NUMBER:MemNonHeapCommittedM}, MemNonHeapMaxM=%{NUMBER:MemNonHeapMaxM}, MemHeapUsedM=%{NUMBER:MemHeapUsedM}, MemHeapCommittedM=%{NUMBER:MemHeapCommittedM}, MemHeapMaxM=%{NUMBER:MemHeapMaxM}, MemMaxM=%{NUMBER:MemMaxM}, GcCountParNew=%{NUMBER:GcCountParNew}, GcTimeMillisParNew=%{NUMBER:GcTimeMillisParNew}, GcCountConcurrentMarkSweep=%{NUMBER:GcCountConcurrentMarkSweep}, GcTimeMillisConcurrentMarkSweep=%{NUMBER:GcTimeMillisConcurrentMarkSweep}, GcCount=%{NUMBER:GcCount}, GcTimeMillis=%{NUMBER:GcTimeMillis}, GcNumWarnThresholdExceeded=%{NUMBER:GcNumWarnThresholdExceeded}, GcNumInfoThresholdExceeded=%{NUMBER:GcNumInfoThresholdExceeded}, GcTotalExtraSleepTime=%{NUMBER:GcTotalExtraSleepTime}, ThreadsNew=%{NUMBER:ThreadsNew}, ThreadsRunnable=%{NUMBER:ThreadsRunnable}, ThreadsBlocked=%{NUMBER:ThreadsBlocked}, ThreadsWaiting=%{NUMBER:ThreadsWaiting}, ThreadsTimedWaiting=%{NUMBER:ThreadsTimedWaiting}, ThreadsTerminated=%{NUMBER:ThreadsTerminated}, LogFatal=%{NUMBER:LogFatal}, LogError=%{NUMBER:LogError}, LogWarn=%{NUMBER:LogWarn}, LogInfo=%{NUMBER:LogInfo}"]

  }
}

if [type]=="secondarynamenode-metrics"{
  grok{
    break_on_match => false
    #metricssystem.MetricsSystem
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, NumActiveSources=%{NUMBER:NumActiveSources:int}, NumAllSources=%{NUMBER:NumAllSources:int}, NumActiveSinks=%{NUMBER:NumActiveSinks:int}, NumAllSinks=%{NUMBER:NumAllSinks:int}, Sink_diceNumOps=%{NUMBER:Sink_diceNumOps:int}, Sink_diceAvgTime=%{NUMBER:Sink_diceAvgTime:float}, Sink_diceDropped=%{NUMBER:Sink_diceDropped:int}, Sink_diceQsize=%{NUMBER:Sink_diceQsize:int}, SnapshotNumOps=%{NUMBER:SnapshotNumOps:int}, SnapshotAvgTime=%{NUMBER:SnapshotAvgTime:float}, PublishNumOps=%{NUMBER:PublishNumOps:int}, PublishAvgTime=%{NUMBER:PublishAvgTime:float}, DroppedPubAll=%{NUMBER: DroppedPubAll:int}"]

     #ugi.UgiMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, LoginSuccessNumOps=%{NUMBER:LoginSuccessNumOps:int}, LoginSuccessAvgTime=%{NUMBER:LoginSuccessAvgTime:float}, LoginFailureNumOps=%{NUMBER:LoginFailureNumOps:int}, LoginFailureAvgTime=%{NUMBER:LoginFailureAvgTime:float}, GetGroupsNumOps=%{NUMBER:GetGroupsNumOps:int}, GetGroupsAvgTime=%{NUMBER:GetGroupsAvgTime:float}"]

     #jvm.JvmMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, ProcessName=%{WORD:ProcessName}, SessionId=%{WORD:SessionId}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, MemNonHeapUsedM=%{NUMBER:MemNonHeapUsedM:float}, MemNonHeapCommittedM=%{NUMBER:MemNonHeapCommittedM:float}, MemNonHeapMaxM=%{NUMBER:MemNonHeapMaxM:float}, MemHeapUsedM=%{NUMBER:MemHeapUsedM:float}, MemHeapCommittedM=%{NUMBER:MemHeapCommittedM:float}, MemHeapMaxM=%{NUMBER:MemHeapMaxM:float}, MemMaxM=%{NUMBER:MemMaxM:float}, GcCountParNew=%{NUMBER:GcCountParNew:int}, GcTimeMillisParNew=%{NUMBER:GcTimeMillisParNew:float}, GcCountConcurrentMarkSweep=%{NUMBER:GcCountConcurrentMarkSweep:float}, GcTimeMillisConcurrentMarkSweep=%{NUMBER:GcTimeMillisConcurrentMarkSweep:float}, GcCount=%{NUMBER:GcCount:int}, GcTimeMillis=%{NUMBER:GcTimeMillis:float}, ThreadsNew=%{NUMBER:ThreadsNew:int}, ThreadsRunnable=%{NUMBER:ThreadsRunnable:int}, ThreadsBlocked=%{NUMBER:ThreadsBlocked:int}, ThreadsWaiting=%{NUMBER:ThreadsWaiting:int}, ThreadsTimedWaiting=%{NUMBER:ThreadsTimedWaiting:int}, ThreadsTerminated=%{NUMBER:ThreadsTerminated:int}, LogFatal=%{NUMBER:LogFatal:int}, LogError=%{NUMBER:LogError:int}, LogWarn=%{NUMBER:LogWarn:int}, LogInfo=%{NUMBER:LogInfo:int}"]
  }
}

if [type]=="reducetask-metrics"{
    grok{
      break_on_match => false
     
     #ugi.UgiMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, LoginSuccessNumOps=%{NUMBER:LoginSuccessNumOps}, LoginSuccessAvgTime=%{NUMBER:LoginSuccessAvgTime}, LoginFailureNumOps=%{NUMBER:LoginFailureNumOps}, LoginFailureAvgTime=%{NUMBER:LoginFailureAvgTime}, GetGroupsNumOps=%{NUMBER:GetGroupsNumOps}, GetGroupsAvgTime=%{NUMBER:GetGroupsAvgTime}"]

     #jvm.JvmMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, ProcessName=%{WORD:ProcessName}, SessionId=, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, MemNonHeapUsedM=%{NUMBER:MemNonHeapUsedM}, MemNonHeapCommittedM=%{NUMBER:MemNonHeapCommittedM}, MemNonHeapMaxM=%{NOTSPACE:MemNonHeapMaxM}, MemHeapUsedM=%{NUMBER:MemHeapUsedM}, MemHeapCommittedM=%{NUMBER:MemHeapCommittedM}, MemHeapMaxM=%{NUMBER:MemHeapMaxM}, MemMaxM=%{NUMBER:MemMaxM}, GcCountPS Scavenge=%{NUMBER:GcCountPS_Scavenge}, GcTimeMillisPS Scavenge=%{NUMBER:GcTimeMillisPS_Scavenge}, GcCountPS MarkSweep=%{NUMBER:GcCountPS_MarkSweep}, GcTimeMillisPS MarkSweep=%{NUMBER:GcTimeMillisPS MarkSweep}, GcCount=%{NUMBER:GcCount}, GcTimeMillis=%{NUMBER:GcTimeMillis}, ThreadsNew=%{NUMBER:ThreadsNew}, ThreadsRunnable=%{NUMBER:ThreadsRunnable}, ThreadsBlocked=%{NUMBER:ThreadsBlocked}, ThreadsWaiting=%{NUMBER:ThreadsWaiting}, ThreadsTimedWaiting=%{NUMBER:ThreadsTimedWaiting}, ThreadsTerminated=%{NUMBER:ThreadsTerminated}, LogFatal=%{NUMBER:LogFatal}, LogError=%{NUMBER:LogError}, LogWarn=%{NUMBER:LogWarn}, LogInfo=%{NUMBER:LogInfo}"]

     #metricssystem.MetricsSystem
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, NumActiveSources=%{NUMBER:NumActiveSources}, NumAllSources=%{NUMBER:NumAllSources}, NumActiveSinks=%{NUMBER:NumActiveSinks}, NumAllSinks=%{NUMBER:NumAllSinks}, Sink_diceNumOps=%{NUMBER:Sink_diceNumOps}, Sink_diceAvgTime=%{NUMBER:Sink_diceAvgTime}, Sink_diceDropped=%{NUMBER:Sink_diceDropped}, Sink_diceQsize=%{NUMBER:Sink_diceQsize}, SnapshotNumOps=%{NUMBER:SnapshotNumOps}, SnapshotAvgTime=%{NUMBER:SnapshotAvgTime}, PublishNumOps=%{NUMBER:PublishNumOps}, PublishAvgTime=%{NUMBER:PublishAvgTime}, DroppedPubAll=%{NUMBER:DroppedPubAll}"]
    }
}

if [type]=="mrappmaster-metrics"{
    grok{
      break_on_match => false

     #jvm.JvmMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, ProcessName=%{WORD:ProcessName}, SessionId=%{WORD:SessionId}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, MemNonHeapUsedM=%{NUMBER:MemNonHeapUsedM}, MemNonHeapCommittedM=%{NUMBER:MemNonHeapCommittedM}, MemNonHeapMaxM=%{NOTSPACE:MemNonHeapMaxM}, MemHeapUsedM=%{NUMBER:MemHeapUsedM}, MemHeapCommittedM=%{NUMBER:MemHeapCommittedM}, MemHeapMaxM=%{NUMBER:MemHeapMaxM}, MemMaxM=%{NUMBER:MemMaxM}, GcCountPS Scavenge=%{NUMBER:GcCountPS_Scavenge}, GcTimeMillisPS Scavenge=%{NUMBER:GcTimeMillisPS_Scavenge}, GcCountPS MarkSweep=%{NUMBER:GcCountPS_MarkSweep}, GcTimeMillisPS MarkSweep=%{NUMBER:GcTimeMillisPS MarkSweep}, GcCount=%{NUMBER:GcCount}, GcTimeMillis=%{NUMBER:GcTimeMillis}, ThreadsNew=%{NUMBER:ThreadsNew}, ThreadsRunnable=%{NUMBER:ThreadsRunnable}, ThreadsBlocked=%{NUMBER:ThreadsBlocked}, ThreadsWaiting=%{NUMBER:ThreadsWaiting}, ThreadsTimedWaiting=%{NUMBER:ThreadsTimedWaiting}, ThreadsTerminated=%{NUMBER:ThreadsTerminated}, LogFatal=%{NUMBER:LogFatal}, LogError=%{NUMBER:LogError}, LogWarn=%{NUMBER:LogWarn}, LogInfo=%{NUMBER:LogInfo}"]

     #ugi.UgiMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, LoginSuccessNumOps=%{NUMBER:LoginSuccessNumOps}, LoginSuccessAvgTime=%{NUMBER:LoginSuccessAvgTime}, LoginFailureNumOps=%{NUMBER:LoginFailureNumOps}, LoginFailureAvgTime=%{NUMBER:LoginFailureAvgTime}, GetGroupsNumOps=%{NUMBER:GetGroupsNumOps}, GetGroupsAvgTime=%{NUMBER:GetGroupsAvgTime}"]

     #mapred.MRAppMetrics
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, JobsSubmitted=%{NUMBER:JobsSubmitted}, JobsCompleted=%{NUMBER:JobsCompleted}, JobsFailed=%{NUMBER:JobsFailed}, JobsKilled=%{NUMBER:JobsKilled}, JobsPreparing=%{NUMBER:JobsPreparing}, JobsRunning=%{NUMBER:JobsRunning}, MapsLaunched=%{NUMBER:MapsLaunched}, MapsCompleted=%{NUMBER:MapsCompleted}, MapsFailed=%{NUMBER:MapsFailed}, MapsKilled=%{NUMBER:MapsKilled}, MapsRunning=%{NUMBER:MapsRunning}, MapsWaiting=%{NUMBER:MapsWaiting}, ReducesLaunched=%{NUMBER:ReducesLaunched}, ReducesCompleted=%{NUMBER:ReducesCompleted}, ReducesFailed=%{NUMBER:ReducesFailed}, ReducesKilled=%{NUMBER:ReducesKilled}, ReducesRunning=%{NUMBER:ReducesRunning}, ReducesWaiting=%{NUMBER:ReducesWaiting}"]

     #rpc.rpc
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port}, Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, ReceivedBytes=%{NUMBER:ReceivedBytes}, SentBytes=%{NUMBER:SentBytes}, RpcQueueTimeNumOps=%{NUMBER:RpcQueueTimeNumOps}, RpcQueueTimeAvgTime=%{NUMBER:RpcQueueTimeAvgTime}, RpcProcessingTimeNumOps=%{NUMBER:RpcProcessingTimeNumOps}, RpcProcessingTimeAvgTime=%{NUMBER:RpcProcessingTimeAvgTime}, RpcAuthenticationFailures=%{NUMBER:RpcAuthenticationFailures}, RpcAuthenticationSuccesses=%{NUMBER:RpcAuthenticationSuccesses}, RpcAuthorizationFailures=%{NUMBER:RpcAuthorizationFailures}, RpcAuthorizationSuccesses=%{NUMBER:RpcAuthorizationSuccesses}, NumOpenConnections=%{NUMBER:NumOpenConnections}, CallQueueLength=%{NUMBER:CallQueueLength}"]

     #rpcdetailed
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port}, Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, GetJobReportNumOps=%{NUMBER:GetJobReportNumOps}, GetJobReportAvgTime=%{NUMBER:GetJobReportAvgTime}, GetTaskAttemptCompletionEventsNumOps=%{NUMBER:GetTaskAttemptCompletionEventsNumOps}, GetTaskAttemptCompletionEventsAvgTime=%{NUMBER:GetTaskAttemptCompletionEventsAvgTime}"]

     #rpcdetailed (bis)
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: port=%{NUMBER:port}, Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, DoneNumOps=%{NUMBER:DoneNumOps}, DoneAvgTime=%{NUMBER:DoneAvgTime}, FatalErrorNumOps=%{NUMBER:FatalErrorNumOps}, FatalErrorAvgTime=%{NUMBER:FatalErrorAvgTime}, GetTaskNumOps=%{NUMBER:GetTaskNumOps}, GetTaskAvgTime=%{NUMBER:GetTaskAvgTime}, CanCommitNumOps=%{NUMBER:CanCommitNumOps}, CanCommitAvgTime=%{NUMBER:CanCommitAvgTime}, CommitPendingNumOps=%{NUMBER:CommitPendingNumOps}, CommitPendingAvgTime=%{NUMBER:CommitPendingAvgTime}, FsErrorNumOps=%{NUMBER:FsErrorNumOps}, FsErrorAvgTime=%{NUMBER:FsErrorAvgTime}, ShuffleErrorNumOps=%{NUMBER:ShuffleErrorNumOps}, ShuffleErrorAvgTime=%{NUMBER:ShuffleErrorAvgTime}, GetMapCompletionEventsNumOps=%{NUMBER:GetMapCompletionEventsNumOps}, GetMapCompletionEventsAvgTime=%{NUMBER:GetMapCompletionEventsAvgTime}, PingNumOps=%{NUMBER:PingNumOps}, PingAvgTime=%{NUMBER:PingAvgTime}, ReportDiagnosticInfoNumOps=%{NUMBER:ReportDiagnosticInfoNumOps}, ReportDiagnosticInfoAvgTime=%{NUMBER:ReportDiagnosticInfoAvgTime}, StatusUpdateNumOps=%{NUMBER:StatusUpdateNumOps}, StatusUpdateAvgTime=%{NUMBER:StatusUpdateAvgTime}, ReportNextRecordRangeNumOps=%{NUMBER:ReportNextRecordRangeNumOps}, ReportNextRecordRangeAvgTime=%{NUMBER:ReportNextRecordRangeAvgTime}"]

     #metricssystem.MetricsSystem
     match=>["message","\A%{NUMBER:job_id} %{WORD:serviceType}.%{WORD:serviceMetrics}: Context=%{WORD:context}, Hostname=%{WORD:hostname1}-%{WORD%{WORD:hostname2}-%{WORD:hostname3}, NumActiveSources=%{NUMBER:NumActiveSources}, NumAllSources=%{NUMBER:NumAllSources}, NumActiveSinks=%{NUMBER:NumActiveSinks}, NumAllSinks=%{NUMBER:NumAllSinks}, Sink_diceNumOps=%{NUMBER:Sink_diceNumOps}, Sink_diceAvgTime=%{NUMBER:Sink_diceAvgTime}, Sink_diceDropped=%{NUMBER:Sink_diceDropped}, Sink_diceQsize=%{NUMBER:Sink_diceQsize}, SnapshotNumOps=%{NUMBER:SnapshotNumOps}, SnapshotAvgTime=%{NUMBER:SnapshotAvgTime}, PublishNumOps=%{NUMBER:PublishNumOps}, PublishAvgTime=%{NUMBER:PublishAvgTime}, DroppedPubAll=%{NUMBER:DroppedPubAll}"]
    }
}

}
output {
  elasticsearch {
    cluster  => logstash # this matches out elasticsearch cluster.name
    protocol => http
  }
}



